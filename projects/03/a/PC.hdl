// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Not(in=reset, out=notReset);
    Not(in=inc, out=notInc);
    And(a=notReset, b=inc, out=noResetNoInc);
    Or(a=reset, b=inc, out=resetOrInc);
    And(a=reset, b=notInc, out=resetNotInc);
    And(a=notReset, b=inc, out=incNotReset);

    ALU(x=nextAddress, zx=reset, nx=noResetNoInc, zy=true, ny=notReset, f=resetOrInc, no=incNotReset, out=aluResult);

    And(a=load, b=notReset, out=loadIn);

    Mux16(a=aluResult, b=in, sel=loadIn, out=inOrNextAddress);
    Register(in=inOrNextAddress,
             out=nextAddress,
             load=true);

    Fanout(in=true, out=allTrue);
    And16(a=allTrue, b=nextAddress, out=out);
}
