// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    /* Send the load input to the selected address */
    DMux8Way(
      in=load,
      sel=address,
      a=loadOne,
      b=loadTwo,
      c=loadThree,
      d=loadFour,
      e=loadFive,
      f=loadSix,
      g=loadSeven,
      h=loadEight
    );

    /* Send the selected address to the output */
    Mux8Way16(
      a=one,
      b=two,
      c=three,
      d=four,
      e=five,
      f=six,
      g=seven,
      h=eight,
      sel=address,
      out=out
    );

    /* Memory registers */
    Register(in=in, load=loadOne, out=one);
    Register(in=in, load=loadTwo, out=two);
    Register(in=in, load=loadThree, out=three);
    Register(in=in, load=loadFour, out=four);
    Register(in=in, load=loadFive, out=five);
    Register(in=in, load=loadSix, out=six);
    Register(in=in, load=loadSeven, out=seven);
    Register(in=in, load=loadEight, out=eight);
}
